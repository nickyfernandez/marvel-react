{"version":3,"sources":["Search.js","PanelAdd.js","Menu.js","Item.js","List.js","App.js","serviceWorker.js","index.js"],"names":["Search","props","onChangeEvent","bind","e","target","value","toString","toLowerCase","this","onsearch","type","onChange","React","Component","PanelAdd","state","title","image","cancelAction","createItem","onChangeImage","onChangeTitle","onhide","setState","preventDefault","onadd","className","onSubmit","enctype","name","onClick","Menu","newItemPanel","add","onCancel","Item","onremove","id","console","log","src","width","List","items","map","item","key","App","characters","copyCharacters","addItem","onSearch","remove","initCharacters","query","temp","res","forEach","indexOf","push","length","filter","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.efa4dd88.chunk.js","sourcesContent":["import React from 'react' ;\r\n\r\nclass Search extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.onChangeEvent = this.onChangeEvent.bind(this);\r\n    }\r\n\r\n    onChangeEvent(e){\r\n        const query = e.target.value.toString().toLowerCase();\r\n        this.props.onsearch(e.target.value);\r\n    }\r\n\r\n    render(){\r\n      return(\r\n          <input type=\"text\" onChange={this.onChangeEvent}/>\r\n\r\n      );\r\n    }\r\n}\r\n\r\n\r\nexport default Search;\r\n","import React from 'react';\r\n\r\n\r\n\r\nclass PanelAdd extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state ={\r\n            title: '',\r\n            image: ''\r\n        };\r\n\r\n        this.cancelAction = this.cancelAction.bind(this);\r\n        this.createItem = this.createItem.bind(this);\r\n        this.onChangeImage = this.onChangeImage.bind(this);\r\n        this.onChangeTitle = this.onChangeTitle.bind(this);\r\n    }\r\n\r\n    cancelAction(e){\r\n        this.props.onhide();\r\n    }\r\n\r\n    onChangeTitle(e){\r\n        this.setState({title: e.target.value});\r\n\r\n    }\r\n    onChangeImage(e){\r\n        this.setState({image: e.target.value});\r\n    }\r\n\r\n    createItem(e){\r\n        e.preventDefault();\r\n        const title = this.state.title;\r\n        const image = this.state.image;\r\n        this.props.onadd({title: title, image: image});\r\n        this.cancelAction();\r\n    }\r\n\r\n\r\n\r\n    render(){\r\n          return(\r\n              <div className=\"new-item-panel-container\">\r\n                <div className=\"new-item-panel\">\r\n                    <form onSubmit={this.createItem} enctype=\"multipart/form-data\">\r\n                        <p>\r\n                        <label>Nombre del personaje</label><br />\r\n                        <input onChange={this.onChangeTitle} type=\"text\" name=\"title\" className=\"input\"  />\r\n                        </p>\r\n\r\n                        <p>\r\n                        <label>Nombre de imagen</label><br />\r\n                        <input onChange={this.onChangeImage} type=\"text\" name=\"image\" className=\"input\"  />\r\n                        </p>\r\n\r\n                        <input type=\"submit\" className=\"button btn-blue\" value=\"Registrar Personaje\" />\r\n                        <button onClick={this.props.onhide} className=\"button btn-normal\" >Cancelar</button>\r\n                    </form>\r\n                </div>\r\n              </div>\r\n          );\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default PanelAdd;\r\n","import React from 'react';\r\nimport './Menu.css';\r\nimport Search from './Search';\r\nimport PanelAdd from './PanelAdd';\r\n\r\nclass Menu extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {newItemPanel: false};\r\n\r\n        this.add = this.add.bind(this);\r\n        this.onCancel = this.onCancel.bind(this);\r\n\r\n    }\r\n\r\n    add(){\r\n     this.setState({newItemPanel: true});\r\n    }\r\n\r\n    onCancel(e){\r\n\r\n        this.setState({newItemPanel: false});\r\n    }\r\n\r\n\r\n    render(){\r\n      return(\r\n        <div className=\"container\">\r\n                    <div className=\"subcontainer\">\r\n                        <div className=\"logo\">{this.props.title}</div>\r\n                        <div className=\"search\">\r\n                          <Search onsearch={this.props.onsearch}/>\r\n                        </div>\r\n                        <div className=\"actions\">\r\n                          <button onClick={this.add} className=\"button btn-blue\">AÃ±adir nuevo personaje</button>\r\n                        </div>\r\n                    </div>\r\n                    {\r\n                      (this.state.newItemPanel)?\r\n                      <PanelAdd onhide={this.onCancel} onadd={this.props.onadd}/>\r\n                      :\r\n                      ''\r\n                    }\r\n                </div>\r\n      );\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport default Menu;\r\n","import React from 'react' ;\r\nimport './Item.css';\r\n\r\nclass Item extends React.Component{\r\n\r\n  constructor(props){\r\n      super(props);\r\n\r\n      this.state = {\r\n          title: '',\r\n          image: ''\r\n\r\n      }\r\n\r\n      this.onremove = this.onremove.bind(this);\r\n\r\n  }\r\n\r\n  componentDidMount(){\r\n          this.setState({\r\n              id: this.props.id,\r\n              title: this.props.title,\r\n              image: this.props.image\r\n          });\r\n      }\r\n\r\n      onremove(e){\r\n        console.log(this.props.id);\r\n        this.props.onremove(this.props.id);\r\n    }\r\n\r\n\r\n  render(){\r\n    return(\r\n      <div className=\"item\">\r\n              <div className=\"image\"><img src={'img/' + this.state.image} width=\"100%\" /></div>\r\n              <div className=\"title\">{this.state.title}</div>\r\n              <div className=\"actions\">\r\n                  <button onClick={this.onremove}>Eliminar</button>\r\n              </div>\r\n          </div>\r\n    );\r\n\r\n  }\r\n}\r\n\r\n\r\nexport default Item;\r\n","import React from 'react';\r\nimport Item from './Item';\r\nimport './List.css';\r\n\r\nfunction List(props){\r\n  return(\r\n    <div className=\"list\" >\r\n      {\r\n        props.items.map(item=>\r\n          <Item\r\n                    key={item.id}\r\n                    id={item.id}\r\n                    title={item.title}\r\n                    image={item.image}\r\n                    onremove={props.onremove}\r\n                    \r\n                     />\r\n        )\r\n      }\r\n\r\n    </div>\r\n  );\r\n\r\n\r\n}\r\n\r\n\r\nexport default List;\r\n","import React from 'react';\nimport './App.css';\nimport Menu from './Menu';\nimport List from './List';\n\n\nclass App extends React.Component{\n\n  constructor(props){\n    super(props);\n    this.state = {\n      characters:[\n        {id:0, title: 'Capitan America', image: '1.jpg'},\n        {id:1, title: 'Black Widow', image: '2.jpg'},\n        {id:2, title: 'Capitana Marvel', image: '3.jpg'},\n        {id:3, title: 'Hulk', image: '4.jpg'},\n        {id:4, title: 'Ironman', image: '5.jpg'},\n        {id:5, title: 'Spider', image: '6.jpg'},\n        {id:6, title: 'Thor', image: '7.jpg'},\n        {id:7, title: 'Thanos', image: '8.jpg'}\n      ],\n      copyCharacters:[]\n    };\n\n    this.addItem = this.addItem.bind(this);\n    this.onSearch = this.onSearch.bind(this);\n    this.remove = this.remove.bind(this);\n\n  }\n\n  componentDidMount(){\n    this.initCharacters();\n  }\n\n  initCharacters(){\n    this.setState((state,props) => ({\n      copyCharacters: [... state.characters]\n    }));\n  }\n\n  onSearch(query){\n    if(query === ''){\n      this.setState({copyCharacters: [...this.state.characters]});\n    }else{\n\n      const temp = [...this.state.characters];\n      var res = [];\n      temp.forEach(item =>{\n        if(item.title.toLowerCase().indexOf(query) > -1){\n          res.push(item);\n        }\n      });\n\n      this.setState({copyCharacters: [...res]});\n    }\n  }\n\n  addItem(item){\n    var temp = [...this.state.characters];\n    const id = temp[temp.length-1].id + 1;\n    item['id'] = id;\n    temp.push(item);\n    this.setState({characters: [...temp]});\n    this.initCharacters();\n  }\n\n\n  remove(id){\n    var temp = [...this.state.characters];\n    const res = temp.filter(item => item.id != id);\n    this.setState({characters: [...res]});\n    this.initCharacters();\n  }\n\n  render(){\n    return (\n      <div className=\"app\">\n        <Menu title=\"Marvel\" onsearch={this.onSearch} onadd={this.addItem} />\n        <List className=\"list\" items={this.state.copyCharacters} onremove={this.remove}  />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n//va a imprimir app en root *****************************************\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n// ------------------------------\n"],"sourceRoot":""}